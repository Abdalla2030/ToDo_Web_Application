// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo_Web_App.Models;

namespace ToDo_Web_App.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20230815161621_ToDoDB")]
    partial class ToDoDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ToDo_Web_App.Models.Category", b =>
                {
                    b.Property<string>("categoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("categoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryID");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            categoryID = "work",
                            categoryName = "Work"
                        },
                        new
                        {
                            categoryID = "home",
                            categoryName = "Home"
                        },
                        new
                        {
                            categoryID = "shop",
                            categoryName = "Shopping"
                        },
                        new
                        {
                            categoryID = "call",
                            categoryName = "Contact"
                        },
                        new
                        {
                            categoryID = "ex",
                            categoryName = "Exercise"
                        });
                });

            modelBuilder.Entity("ToDo_Web_App.Models.Status", b =>
                {
                    b.Property<string>("statusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusID");

                    b.ToTable("statuses");

                    b.HasData(
                        new
                        {
                            statusID = "open",
                            statusName = "Open"
                        },
                        new
                        {
                            statusID = "closed",
                            statusName = "Closed"
                        });
                });

            modelBuilder.Entity("ToDo_Web_App.Models.ToDo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("dueDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("statusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("categoryID");

                    b.HasIndex("statusID");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("ToDo_Web_App.Models.ToDo", b =>
                {
                    b.HasOne("ToDo_Web_App.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDo_Web_App.Models.Status", "status")
                        .WithMany()
                        .HasForeignKey("statusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("status");
                });
#pragma warning restore 612, 618
        }
    }
}
